bool isValid(char * s){

    if( s == NULL )
        return false;
    char *stack = (char *) malloc( sizeof(char) * ( strlen(s)+1 ) );
    int top = 0;
    for( int i=0; s[i]!='\0'; i++)
    {
                 If(s[i]=='(' || s[i]=='[' || s[i]=='{') //Left brackets are pushed onto the stack
            stack[++top] = s[i];
                 Else if( (s[i]==')'&&stack[top]=='(') || (s[i]==']'&&stack[top]=='[') || (s[ i]=='}'&&stack[top]=='{') ) //right parenthesis comparison
            top--;
                 Else // comparison failed
            return false;
    }
    if( stack!= NULL)
    {
        free(stack);
        stack = NULL;
    }
         If( top == 0 ) //The string ends and the stack is empty
        return true;
    return false;

}
