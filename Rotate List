/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
           if(head == NULL or head->next == NULL){
            return head;
        }
        
        int len = 0, rotation = 0;
        ListNode* temp = head;
        while(temp != NULL){
            len++;
            temp = temp->next;
        }
        
        k = k % len;
        
        ListNode *preTail = head, *tail = head;
        for(int i = 0; i < k; i++){
            while(tail->next != NULL){
                preTail = tail;
                tail = tail->next;
            }
            preTail->next = NULL;
            tail->next = head;
            head = tail;
        }
        
        return head;
    }
};
